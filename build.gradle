plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.7.0'
}

group = 'ru.diszexuf'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.instancio:instancio-core:5.3.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.30'

    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.0'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
    main {
        java {
            srcDir 'build/generated/src/main/java'
        }
    }
}

openApiGenerate {
    generatorName = 'spring'
    inputSpec = file('src/main/resources/openapi.yaml').absolutePath
    outputDir = file('build/generated').absolutePath
    apiPackage = 'ru.diszexuf.streamlive.api'
    modelPackage = 'ru.diszexuf.streamlive.model'
    invokerPackage = 'ru.diszexuf.streamlive.invoker'
    modelNameSuffix = 'Dto'

    configOptions = [
            interfaceOnly        : 'true',
            useOptional          : 'false',
            dateLibrary          : 'java8',
            implementationPackage: '',
            skipDefaultInterface : 'true',
            useTags              : 'true',
            useSpringValidation  : 'true',
            library: 'spring-boot',
            useJakartaEe: 'true',
    ]
}


tasks.register('cleanOpenApiGenerate', Delete) {
    delete file('build/generated')
}

tasks.named("openApiGenerate") {
    dependsOn cleanOpenApiGenerate
}

tasks.named("compileJava").configure {
    dependsOn("openApiGenerate")
}

tasks.named('test') {
    useJUnitPlatform()
}
